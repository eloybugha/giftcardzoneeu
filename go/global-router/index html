<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Opening Best Routeâ€¦ | GiftCardZoneEU</title>

  <!-- ðŸ›‘ Router page: don't index -->
  <meta name="robots" content="noindex, nofollow" />
  <meta name="referrer" content="no-referrer" />
  <meta http-equiv="Cache-Control" content="no-store" />
  <meta http-equiv="Pragma" content="no-cache" />
  <meta name="color-scheme" content="dark light" />

  <!-- Minimal CSP for safety on GitHub Pages -->
  <meta http-equiv="Content-Security-Policy"
        content="default-src 'self'; img-src 'self' data: https://static.cloudflareinsights.com; 
                 style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; 
                 connect-src 'self' https://www.cloudflare.com; frame-ancestors *;">

  <style>
    :root { --bg:#0b0f19; --card:#0f1626; --txt:#e6ecff; --muted:#9bb0ff; --accent:#22c55e; --border:rgba(255,255,255,.08); }
    *{box-sizing:border-box} html,body{height:100%}
    body{margin:0;display:grid;place-items:center;background:radial-gradient(1200px 600px at 70% -20%,#1f2937 0%,#0b0f19 48%,#070b13 100%);color:var(--txt);font:500 15px system-ui,Segoe UI,Roboto,Helvetica,Arial}
    .card{width:min(560px,92vw);background:linear-gradient(180deg,rgba(255,255,255,.06),rgba(255,255,255,.03));border:1px solid var(--border);padding:22px 20px;border-radius:16px;backdrop-filter: blur(10px)}
    h1{margin:2px 0 8px;font-size:20px}
    p{margin:6px 0;color:var(--muted)}
    .bar{height:6px;background:#121a2b;border-radius:999px;overflow:hidden;margin-top:14px;border:1px solid var(--border)}
    .bar>i{display:block;height:100%;width:12%;background:linear-gradient(90deg,#22c55e,#60a5fa);animation:load 1.2s ease-in-out infinite}
    @keyframes load{0%{transform:translateX(-20%)}100%{transform:translateX(820%)}}
    .hint{margin-top:10px;font-size:12px;opacity:.8}
    .debug{margin-top:12px;padding:10px;border:1px dashed var(--border);border-radius:12px;display:none}
    .row{display:flex;gap:8px;flex-wrap:wrap;margin-top:8px}
    .btn{padding:8px 10px;border-radius:10px;border:1px solid var(--border);background:#0f1626;color:var(--txt);cursor:pointer}
    .btn:hover{filter:brightness(1.2)}
    a{color:inherit}
  </style>
</head>
<body>
  <main class="card">
    <h1>Finding the best route for youâ€¦</h1>
    <p id="msg">Auto-detecting your location and opening the right page.</p>
    <div class="bar"><i></i></div>
    <p class="hint">If nothing happens after a moment, <a href="#" id="manualLink">tap here</a>.</p>

    <!-- Debug panel (show with ?debug=1 or if detection fails) -->
    <div id="debug" class="debug">
      <strong>Debug tools</strong>
      <div id="dbgInfo" style="margin-top:6px;white-space:pre-wrap;"></div>
      <div class="row" style="margin-top:10px">
        <button class="btn" data-force="PH">Force PH</button>
        <button class="btn" data-force="NL">Force NL</button>
        <button class="btn" data-force="US">Force US</button>
        <button class="btn" data-force="GLOBAL">Force GLOBAL</button>
      </div>
    </div>
  </main>

  <script>
  (function(){
    // ---------- CONFIG ----------
    // Target destinations (end with trailing slash)
    const ROUTES = {
      PH: "/country/ph/",
      NL: "/country/nl/",
      US: "/country/us/",
      GLOBAL: "/NeutralCPC/"
    };

    // Countries treated as US / NL / PH buckets (add as needed)
    const BUCKETS = {
      PH: ["PH"],
      NL: ["NL","BE"], // Belgium Dutch often okay with NL flow (adjust if needed)
      US: ["US","GU","PR","VI","UM","AS","CA"] // include CA if your US offers accept it; remove if not
    };

    // Delay before redirect (ms) â€“ small to keep it snappy
    const REDIRECT_DELAY = 150;

    // ---------- HELPERS ----------
    const $ = sel => document.querySelector(sel);
    const msg = t => ($("#msg").textContent = t);
    const dbg = (o) => {
      const box = $("#debug"); box.style.display = "block";
      $("#dbgInfo").textContent = typeof o === "string" ? o : JSON.stringify(o, null, 2);
    };

    // Build a clean query string (preserve everything except force/debug)
    function preservedQuery() {
      const url = new URL(location.href);
      ["force","debug"].forEach(k => url.searchParams.delete(k));
      const qs = url.search.toString();
      return qs ? qs : "";
    }

    // Compose final target URL
    function makeTarget(path){
      const qs = preservedQuery();
      return path + (qs ? (path.includes("?") ? "&" : "?") + qs.slice(1) : "");
    }

    // Open in same tab with a tiny delay + meta refresh fallback
    function go(target){
      try {
        // loop guard: if we are already at target path, do nothing
        if (location.pathname.replace(/\/+$/,"/") === target.replace(/\/+$/,"/")) return;
      } catch(e){}
      const finalURL = makeTarget(target);
      $("#manualLink").setAttribute("href", finalURL);
      setTimeout(()=>location.replace(finalURL), REDIRECT_DELAY);

      // Meta refresh fallback (for ultra old browsers / JS disabled)
      const meta = document.createElement("meta");
      meta.httpEquiv = "refresh"; meta.content = `2;url=${finalURL}`;
      document.head.appendChild(meta);
    }

    // Decide bucket from ISO country code
    function bucketFromISO(iso){
      const up = String(iso || "").toUpperCase();
      if (!up) return "GLOBAL";
      if (BUCKETS.PH.includes(up)) return "PH";
      if (BUCKETS.NL.includes(up)) return "NL";
      if (BUCKETS.US.includes(up)) return "US";
      return "GLOBAL";
    }

    // ---------- FORCED / DEBUG MODES ----------
    const url = new URL(location.href);
    const forced = (url.searchParams.get("force") || "").toUpperCase();
    const debugging = url.searchParams.get("debug") === "1";

    if (forced && ROUTES[forced]) {
      msg("Opening forced route: " + forced + " â€¦");
      if (debugging) dbg({ mode:"FORCED", forced, target: ROUTES[forced] });
      return go(ROUTES[forced]);
    }

    // ---------- PRIMARY: Cloudflare Trace ----------
    // Works when site is behind Cloudflare proxy (recommended).
    const traceURL = "https://www.cloudflare.com/cdn-cgi/trace";
    const TRACE_TIMEOUT = 1400;

    function withTimeout(promise, ms) {
      return new Promise((resolve, reject) => {
        const t = setTimeout(() => reject(new Error("timeout")), ms);
        promise.then(v => { clearTimeout(t); resolve(v); })
               .catch(e => { clearTimeout(t); reject(e); });
      });
    }

    async function detectCountry(){
      msg("Detecting via Cloudflareâ€¦");
      try {
        const res = await withTimeout(fetch(traceURL, { cache:"no-store" }), TRACE_TIMEOUT);
        const text = await res.text();
        // Parse "loc=XX" line
        const m = text.match(/^loc=([A-Z]{2})/m);
        const iso = m ? m[1] : "";
        return { method: "cloudflare-trace", iso };
      } catch (e) {
        return { method: "cloudflare-trace", iso: "", error: e.message || String(e) };
      }
    }

    // ---------- SECONDARY: Language / Timezone Heuristics ----------
    function fallbackGuess(){
      const lang = (navigator.languages && navigator.languages[0]) || navigator.language || "";
      const tz = Intl.DateTimeFormat().resolvedOptions().timeZone || "";
      let iso = "";

      // Simple language-based mapping
      const L = lang.toLowerCase();
      if (L.startsWith("fil") || L.startsWith("tl") || L.includes("-ph")) iso = "PH";
      else if (L.startsWith("nl")) iso = "NL";
      else if (L.startsWith("en-us")) iso = "US";

      // Timezone nudges (best-effort)
      if (!iso && /manila/i.test(tz)) iso = "PH";
      if (!iso && /amsterdam|brussels|berlin|paris|rome|vienna|stockholm|oslo|copenhagen|madrid|lisbon/i.test(tz)) iso = "NL"; // EU bucket â†’ NL flow
      if (!iso && /new_york|chicago|denver|los_angeles|phoenix|honolulu|anchorage/i.test(tz)) iso = "US";

      return { method:"heuristics", iso };
    }

    // ---------- RUN ----------
    (async function run(){
      const cf = await detectCountry();
      let iso = cf.iso;
      if (!iso) {
        const fb = fallbackGuess();
        iso = fb.iso || "ZZ";
        if (debugging) dbg({ primary: cf, fallback: fb });
      } else if (debugging) {
        dbg({ primary: cf });
      }

      const bucket = bucketFromISO(iso);
      const target = ROUTES[bucket] || ROUTES.GLOBAL;

      msg(`Routing: ${bucket} â†’ ${target}`);
      go(target);
    })();

    // Debug panel controls
    $("#debug").addEventListener?.("click", (e)=>{
      const el = e.target.closest("[data-force]");
      if (!el) return;
      const f = el.getAttribute("data-force");
      const u = new URL(location.href);
      u.searchParams.set("force", f);
      u.searchParams.set("debug", "1");
      location.href = u.toString();
    });

    // If user taps manual link before detection finishes, default to GLOBAL
    $("#manualLink").addEventListener("click", (e)=>{
      e.preventDefault();
      go(ROUTES.GLOBAL);
    });
  })();
  </script>
</body>
</html>

